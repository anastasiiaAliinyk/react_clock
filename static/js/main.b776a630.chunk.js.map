{"version":3,"sources":["Clock.js","App.js","index.js"],"names":["Clock","name","state","time","Date","this","timerID","setInterval","setState","console","log","toLocaleTimeString","prevProps","clearInterval","React","Component","App","hideClock","isClockVisible","showClock","renameClock","clockName","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA2CeA,G,wDAvCb,cAAuB,IAAD,EAARC,EAAQ,EAARA,KAAQ,4BACpB,cAAMA,IACDC,MAAQ,CAAEC,KAAM,IAAIC,MAFL,E,qDAKtB,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,O,gCAGL,SAAmBC,GACbP,KAAKJ,OAASW,EAAUX,MAE1BQ,QAAQC,IAAR,qCAA0CE,EAAUX,KAApD,eAA+DI,KAAKJ,S,kCAIxE,WACEY,cAAcR,KAAKC,W,oBAGrB,WACE,OACE,mEAEG,IACAD,KAAKH,MAAMC,KAAKQ,0B,GA9BLG,IAAMC,YCwDXC,E,kDArDb,aAAe,IAAD,8BACZ,gBAOFC,UAAY,WACV,EAAKT,SAAS,CAAEU,gBAAgB,KATpB,EAYdC,UAAY,WACV,EAAKX,SAAS,CAAEU,gBAAgB,KAbpB,EAgBdE,YAAc,WACZ,EAAKZ,SAAS,CAAEa,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,aAf3C,EAAKtB,MAAQ,CACXgB,gBAAgB,EAChBG,UAAW,GAJD,E,0CAoBd,WAAU,IAAD,EAC+BhB,KAAKH,MAAnCgB,EADD,EACCA,eAAgBG,EADjB,EACiBA,UAExB,OACE,yBAAKI,UAAU,OACb,2CAGEP,GAAkB,kBAAC,EAAD,CAAOjB,KAAMoB,IAEjC,4BACEK,KAAK,SACLC,QAAStB,KAAKY,WAFhB,kBAMA,4BACES,KAAK,SACLC,QAAStB,KAAKc,WAFhB,kBAMA,4BACEO,KAAK,SACLC,QAAStB,KAAKe,aAFhB,wB,GA3CUN,IAAMC,WCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b776a630.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  constructor({ name }) {\n    super(name);\n    this.state = { time: new Date() };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.time.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.name !== prevProps.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      <h2>\n        Сейчас\n        {' '}\n        {this.state.time.toLocaleTimeString()}\n      </h2>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\n\nimport './App.scss';\nimport Clock from './Clock';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isClockVisible: true,\n      clockName: 0,\n    };\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  renameClock = () => {\n    this.setState({ clockName: Math.round(Math.random() * 100) });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {\n          isClockVisible && <Clock name={clockName} />\n        }\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide the Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show the Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.renameClock}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}